
#

# Example ppc386.cfg for Free Pascal Compiler Version 0.99.10

#



# ----------------------

# Defines (preprocessor)

# ----------------------



#

# nested #IFNDEF, #IFDEF, #ENDIF, #ELSE, #DEFINE, #UNDEF are allowed

#

# -d is the same as #DEFINE

# -u is the same as #UNDEF

#



# When not m68k is defined at the commandline, define i386

#IFNDEF m68k

  #DEFINE i386

#ENDIF



#

# Some examples (for switches see below, and the -? helppages)

#

# Try compiling with the -dRELEASE or -dDEBUG on the commandline

#



# For a release compile with optimizes and strip debuginfo

#IFDEF RELEASE

  -Og2p1

  -Xs

  #DEFINE SMART

  #WRITE Compiling Release Version

#ENDIF



# For a debug version compile with debuginfo and all codegeneration checks on

#IFDEF DEBUG

  -g

  -Crtoi

  #WRITE Compiling Debug Version

#ENDIF



# ----------------

# Parsing switches

# ----------------



# All assembler blocks are intel styled by default

#-Rintel



# All assembler blocks are AT&T styled by default

#-Ratt



# Semantic checking

# -S2   switch some Delphi 2 extension on

# -Sc   supports operators like C (*=,+=,/= and -=)

# -Sg   allows LABEL and GOTO

# -Si   support C++ stlyed INLINE

# -Sm   support macros like C (global)

# -So   tries to be TP/BP 7.0 compatible

# -Ss   constructor name must be init (destructor must be done)

# -St   allows static keyword in objects

-Sg



# ---------------

# Code generation

# ---------------



# Uncomment the next line if you always want static/dynamic units by default

# (can be overruled with -CD, -CS at the commandline)

#-CS

#-CD

# Using smartlinking

#-Cx

# Set the default heapsize to 8Mb

#-Ch8000000

#IFDEF SMART

    -CS

    -Cx

#ENDIF


# Set default codegeneration checks (iocheck, overflow, range, stack)

#-Ci

#-Co

#-Cr

#-Ct



# Optimizer switches

# -Og        generate smaller code

# -OG        generate faster code (default)

# -Or        keep certain variables in registers (still BUGGY!!!)

# -Ou        enable uncertain optimizations (see docs)

# -O1        level 1 optimizations (quick optimizations)

# -O2        level 2 optimizations (-O1 + slower optimizations)

# -O3        level 3 optimizations (same as -O2u)

# -Op        target processor

#     -Op1  set target processor to 386/486

#     -Op2  set target processor to Pentium/PentiumMMX (tm)

#     -Op3  set target processor to PPro/PII/c6x86/K6 (tm)

-Og2p1





# -----------------------

# Set Filenames and Paths

# Unit paths

#IFDEF SMART

    -FuF:/LANG/FPC/RTL/OS2/SMART
    -FuF:/LANG/WORK/UNITS/SMART

#ELSE

    -FuF:/LANG/FPC/RTL/OS2
    -FuF:/LANG/WORK/UNITS

#ENDIF

# Include paths
-FiF:/LANG/FPC/RTL/OS2
-FiF:/LANG/FPC/RTL/I386
-FiF:/LANG/FPC/RTL/INC
